// 1)
// შექმენით ფუნქცია, რომელიც პარამეტრად იღებს განუსაზღვრელი რაოდენობის არგუმენტებს.
// არგუმენტები შეიძლება იყოს ნებისმიერი ტიპის(სტრინგი, ნამბერი, ობიექტი და ა.შ.)
// ფუნქციაში უნდა იყოს შემდეგი ლოგიკა: ყველა გადაცემული არგუმენტი უნდა შემოწმდეს და შეიქმნას ახალი ერეი, 
// რომლებშიც ჩაწერილი იქნება გადმოცემული არგუმენტებიდან მხოლოდ number ტიპის მნიშვნელობები.
// შემდეგ უნდა შემოწმდეს ამ ერეის მნიშვნელობები და შეიქმნას ახალი ერეი, რომელშიც წინა ერეის ლუწი მნიშვნელობა ორზე 
// იქნება გაყოფილი, ხოლო კენტი 2 ხარისხში იქნება აყვანილი.
// საბოლოოდ უნდა დააბრუნოთ ბოლოს მიღებული ერეის მნიშნველობების ჯამის ნახევარი, ოღონდ დამრგვალებული ვარიანტი.
// (მოიძიეთ ინფორმაცია რიცხვის დარმგვალებაზე ჯავასკრიპტში)

// გამოიძახეთ ფუნქცია და გადაეცით მძიმით გამოყოფილი სხვადასხვა მნიშვნელობები, თუ გადაცემული მნიშვნელობიდან არცერთი იქნება 
// რიცხვი, მაშინ დააბრუნეთ შესაბამისი მესიჯი.


const arr = [1, 2, 100, 589, 5784, 4, 16, 84, 8, 3, 9, 'ნათია'];

const newArr = arr.filter((value, index, array) => {
    return typeof value === 'number';
}).map((value, index, array) => {
    if (value % 2 === 0) {
        return value / 2;
    }
    return value ** 2;
})
function sum(...others){
    let count = 0;
for(let value of newArr){
    count += value;
} return Math.floor(count / 2);
}
console.log(sum(newArr));

//2) მოცემულია რიცხვების ერეი [ 4, 5, 11, 2, 9, 99, 1092, 1 და ა.შ]; 
// გევალებათ დაალაგოთ ამ მასივის ელემენტები ზრდადობით (დაგჭირდებათ ახალი ფუნქციის მოძიება)

const numbers = [4, 5, 11, 2, 9, 99, 1092, 1 ];
numbers.sort(function(a, b) {
  return a - b;
});
console.log(numbers);

//3) 2) - ე მაგალითში მიღებული ერეის გადაურეთ filter ფუნქციით და დააბრუნეთ მხოლოდ ლუწი ელემენტები.

const newArr1 = numbers.filter((value) => value % 2 ===0);
console.log(newArr1);

//4) 3) - ე მაგალითში მიღებულ ერეის გადაურეთ reduce ფუნქციით და დაითვალეთ ელემენტების ერთმანეთზე ნამრავლი.

const initialValue = 0;
const multiplication = newArr1.reduce(
    (accumulator, currentValue) => accumulator * currentValue);

console.log(multiplication);

// 5) მოცემულია სტრინგების მასივი, სადაც ყველა სიმბოლო დაწერილია აფერქეისით
//  [ 'HELLO', 'WORLD', 'JS', 'GEOLAB' და ა.შ.], თქვენ გევალებათ აღნიშნული ერეიდან მიიღოთ ერთი სტრიქონი
// capitalCase (ყოველი სიტყვის პირველი სიმბოლო იყოს აფერქეისი, დანარჩენი ლოვერქეისი) 
// ით დაწერილი. შედეგი იქნება შემდეგი Hello World Js Geolab .....


const text = [ 'HELLO', 'WORLD', 'JS', 'GEOLAB'];
const lowercased = text.map(name => name.toUpperCase().charAt(0) + name.toLowerCase().slice(1));
console.log(lowercased.join(' '));